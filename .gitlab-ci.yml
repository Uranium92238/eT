image: registry.gitlab.com/et-program/et/ubuntu-mkl-for-et:v1.0

variables:
     GIT_SUBMODULE_STRATEGY: recursive

stages:
  - pystyle
  - code-quality
  - gnu
  - intel
  - release

pystyle:
  stage: pystyle
  image: python:3-buster
  needs: []
  script:
    - pip install black==22.3.0
    - black --check --diff .
  only:
    - master
    - development
    - merge_requests
    - /^release\/\d+\.\d+$/

code-quality:
  stage: code-quality
  image: python:latest
  needs: []
  script:
    - git clone https://github.com/eirik-kjonstad/fortran-code-quality.git
    - cd fortran-code-quality
    - git checkout tags/v1.3.0 -b v1.3.0
    - python3 FortranQuality.py --path ../src
  only:
    - master
    - development
    - merge_requests
    - /^release\/\d+\.\d+$/

gnu-build:
  stage: gnu
  needs: []
  script:
    - whoami
    - cmake --version
    - >
      if [ "$coverage" == "true" ]; then
        extra_F_flags=' -fprofile-arcs -ftest-coverage -O0'
      fi
    - ./setup.py -clean --enable-pfunit --pfunit-dir=/pFUnit/build/installed -FC=gfortran-8 -CXX=g++-8 -F-flags="$extra_F_flags" $extra_setup_options --pcm
    - cd build
    - cmake_command=$(cat setup_cmake_output | head -1)
    - echo ${cmake_command}
    - make -j8
  tags:
    - docker
  only:
    - master
    - development
    - merge_requests
    - /^release\/\d+\.\d+$/
  artifacts:
    paths:
      - build/

gnu-run:
  stage: gnu
  needs: ["gnu-build"]
  script:
    - cd build
    - ctest -j8 --output-on-failure
    - >
      if [ "$coverage" == "true" ]; then
        shopt -s globstar # Enable ** in gcov
        gcov-8 -abcfu **  # produce .gcov files for codecov
        curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
        curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
        gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        shasum -a 256 -c codecov.SHA256SUM
        chmod +x codecov
        ./codecov -v -t ${CODECOV_TOKEN}
      fi
  tags:
    - docker
  only:
    - master
    - development
    - merge_requests
    - /^release\/\d+\.\d+$/

intel-build:
  stage: intel
  image: registry.gitlab.com/et-program/et/ubuntu-mkl-ifort-for-et
  needs: []
  script:
    - ./setup.py -clean -FC=ifort -CC=icc -CXX=icpc -F-flags="$extra_F_flags" $extra_setup_options --pcm
    - cd build
    - cmake_command=$(cat setup_cmake_output | head -1)
    - echo ${cmake_command}
    - make -j8
  only:
    - master
    - development
    - merge_requests
    - /^release\/\d+\.\d+$/
  artifacts:
    paths:
      - build/

intel-run:
  stage: intel
  image: registry.gitlab.com/et-program/et/ubuntu-mkl-ifort-for-et
  needs: ["intel-build"]
  script:
    - cd build
    - ctest -j8 --output-on-failure
  only:
    - master
    - development
    - merge_requests
    - /^release\/\d+\.\d+$/

prepare-release:
  stage: release
  image: python:latest
  dependencies: []
  script:
    - python3 dev_tools/export_release_info.py
  artifacts:
    paths:
      - major.txt
      - minor.txt
      - patch.txt
      - description.txt
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "eT-program" && $CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      when: on_success
    - when: never # Default: never run if the above conditions are false

create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  needs: ["prepare-release"]
  script:
    - major=$(cat major.txt)
    - minor=$(cat minor.txt)
    - patch=$(cat patch.txt)
    - description=$(cat description.txt)
    - >
      release-cli create
      --name "v${major}.${minor}.${patch}"
      --description "${description}"
      --tag-name "v${major}.${minor}.${patch}"
      --ref $CI_COMMIT_SHA
  rules:
    - if: '$CI_PROJECT_NAMESPACE == "eT-program" && $CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      when: on_success
    - when: never # Default: never run if the above conditions are false
