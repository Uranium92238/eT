#!/usr/bin/env python3
# vim:ft=python
#
# Simple setup script to create build directory and run CMake
# Inspired by Dalton setup script by Radovan Bast and Jonas Juselius
# (c) Rolf H. Myhre <rolf.h.myhre at ntnu.no>
# licensed under the GNU Lesser General Public License
#
import os
import sys
import subprocess
import shutil
from argparse import ArgumentParser

if sys.version < '3.5':
    print('requires python version >= 3.5')
    sys.exit(1)

root_dir = os.path.dirname(os.path.realpath(__file__))
default_path = os.path.join(root_dir, 'build')

def input_parser():
    parser = ArgumentParser()

    parser.add_argument('build_dir',
                         help="Build directory",
                         default=default_path,
                         action='store',
                         nargs='?')
    parser.add_argument('-clean', '--clean-dir',
                         help="Delete build dir and create new (if it exists) before running CMake",
                         action='store_true')
    parser.add_argument('--clean-CMake',
                         help="Delete CMakeCache.txt (if it exists) before running CMake",
                         action='store_true')

    return parser.parse_args()

def build_maker(args):
    #Save path to build directory
    build_path = os.path.abspath(args.build_dir)

    #Check if user is trying to do something stupid
    eT_dirs = {os.path.join(root_dir,'documentation'),
               os.path.join(root_dir,'cmake'),
               os.path.join(root_dir,'submodules'),
               os.path.join(root_dir,'tests'),
               os.path.join(root_dir,'src')}
    if build_path in eT_dirs:
        print(build_path, 'is an eT directory')
        sys.exit(1)


    build_exists = os.path.isdir(build_path) #Check if it exists
    Cachename = os.path.join(build_path,"CMakeCache.txt") #Path to CMakeCache.txt

    if (build_exists): #Does build already exist
        if args.clean_dir: #Delete if clean-dir
            shutil.rmtree(build_path)
        elif (args.clean_CMake): #Delete CMakeCache.txt if clean_CMake and it exists
            if (os.path.exists(Cachename)):
                os.remove(Cachename)

    #Make directory if it does not exist
    os.makedirs(build_path,exist_ok=True)


def main(argv):
    args = input_parser()
    build_maker(args)
    

if __name__ == '__main__':
    main(sys.argv)
