#!/usr/bin/env python3

from pathlib import Path
import sys

# we make sure we can import runtest and runtest_config
sys.path.append(str(Path(__file__).parents[1]))

# we import essential functions from the runtest library
from runtest import version_info, cli, run

# this tells runtest how to run your code
from runtest_config import configure

# functions to get the filters
from filters import get_es_filter

# we stop the script if the major version is not compatible
assert version_info.major == 2

# construct filter(s)
n_states = 10
threshold = 1.0e-6
restart = True

f = get_es_filter(n_states, threshold, restart=restart)

# invoke the command line interface parser which returns options
options = cli()

ierr = 0

for inp in ['ccsd.inp']:
    #
    # the run function runs the code with extra arguments
    # keep the scratch in the tests folder in build
    #
    ierr += run(options,
                configure,
                input_files=inp,
                extra_args='-save .') 

# reset ierr: helpful if the first calculation is supposed to crash
# e.g. if the calculations has to little iterations to converge
ierr = 0
#
#  Run CC3 calculation with the same filter list f
#  We could also provide a different filter list g
#
for inp in ['cc3_cvs_right_diis_w_davidson_preconv.inp']:
    #
    # the run function runs the code and filters the outputs
    # don't provide -ks to delete scratch after succesful run
    #
    ierr += run(options,
                configure,
                input_files=inp,
                extra_args='-load ./ccsd_restart_files',
                filters={'out': f})

sys.exit(ierr)
