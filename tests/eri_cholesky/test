#!/usr/bin/env python3

from pathlib import Path
import sys

# we make sure we can import runtest and runtest_config
sys.path.append(str(Path(__file__).parents[1]))

# we import essential functions from the runtest library
from runtest import version_info, get_filter, cli, run

# this tells runtest how to run your code
from runtest_config import configure

# we stop the script if the major version is not compatible
assert version_info.major == 2

# construct filter(s)
f = [
    # is screening as expected?
    get_filter(string='Significant shell pairs:',
               abs_tolerance=1.0e-10),
    get_filter(string='Significant AO pairs:',
               abs_tolerance=1.0e-10),
    get_filter(string='Construct shell pairs:',
               abs_tolerance=1.0e-10),
    get_filter(string='Construct AO pairs:',
               abs_tolerance=1.0e-10),
    # did we get the expected number of cholesky vectors?
    get_filter(string='Final number of Cholesky vectors:',
               abs_tolerance=1.0e-10),
    # does the diagonal test pass (more precisely, 
    # is the difference relative to reference <= 1.0e-10)?
    get_filter(string='Maximal difference between approximate and actual diagonal:',
               abs_tolerance=1.0e-10),
    # is the iteration information as expected?
    get_filter(from_string='Iter.  #Sign. ao pairs / shell pairs   Max diagonal    #Qualified    #Cholesky    Cholesky array size',
               num_lines=9,
               mask=[2,3,4,5,6,7],
               abs_tolerance=1.0e-10)
]

# invoke the command line interface parser which returns options
options = cli()

ierr = 0
inp = 'eri_cholesky.inp'
# the run function runs the code and filters the outputs
ierr += run(options,
            configure,
            input_files=inp,
            filters={'out': f})

sys.exit(ierr)
