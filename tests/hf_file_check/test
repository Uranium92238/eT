#!/usr/bin/env python3

from pathlib import Path
import sys

# we make sure we can import runtest and runtest_config
sys.path.append(str(Path(__file__).parents[1]))

# we import essential functions from the runtest library
from runtest import version_info, cli, run

# this tells runtest how to run your code
from runtest_config import configure

# functions to get the filters
from filters import get_hf_filter

# we stop the script if the major version is not compatible
assert version_info.major == 2

# construct filter(s)
threshold = 1.0e-10

f = get_hf_filter(threshold)

# invoke the command line interface parser which returns options
options = cli()

checkfiles = ["hf_energy.AO_density.plt",
              "hf_energy.MO_0001.plt",
              "hf_energy.MO_0002.plt",
              "hf_energy.MO_0003.plt",
              "hf_energy_mo_information.out"]

test_dir = Path(__file__).parent
checkfiles = [test_dir / i for i in checkfiles]

ierr = 0
for inp in ['hf_energy.inp']:
    # the run function runs the code and filters the outputs
    ierr += run(options,
                configure,
                input_files=inp,
                extra_args='-xyz',
                filters={'out': f})

missing_files = [i for i in checkfiles if not i.exists()]
filerror = len(missing_files)

if filerror > 0:
    print("Missing files:")
    print("\n".join([i.name for i in missing_files]))

sys.exit(ierr + filerror)
